# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "centos/8"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
    vb.memory = "1024"
    vb.cpus = "1"
  #  vb.customize ["modifyvm", :id, "--uart1", "0x3F8", "4"]
  #  vb.customize ["modifyvm", :id, "--uartmode1", "file", File::NULL]
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
  
  config.vm.define "vm1" do |vm1|
    vm1.vm.hostname = "vm1"
    vm1.vm.network "public_network", bridge: "eno3", type: "dhcp"

    vm1.vm.provision "shell", privileged: false, inline: <<-SHELL
        sudo sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*
        sudo sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*
        sudo dnf install -y https://www.elrepo.org/elrepo-release-8.el8.elrepo.noarch.rpm wget git 
        sudo rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
        sudo dnf makecache
	git clone https://github.com/nocsysmars/monitor-bpf-c.git
        sudo dnf install -y ~/monitor-bpf-c/vm/centos/rpms/kernel-ml-core-5.11.0-1.el8.btf.x86_64.rpm
        sudo dnf install -y ~/monitor-bpf-c/vm/centos/rpms/kernel-ml-modules-5.11.0-1.el8.btf.x86_64.rpm
        sudo dnf install -y ~/monitor-bpf-c/vm/centos/rpms/kernel-ml-5.11.0-1.el8.btf.x86_64.rpm
        sudo dnf install -y ~/monitor-bpf-c/vm/centos/rpms/kernel-ml-headers-5.11.0-1.el8.btf.x86_64.rpm --allowerasing
    SHELL
    vm1.vm.provision "shell", privileged: true, reboot: true
    vm1.vm.provision "shell", privileged: false, inline: <<-SHELL
        sudo dnf config-manager --set-enabled powertools
        sudo dnf install clang llvm elfutils-libelf-devel libcap-devel perf net-tools vim -y
        sudo dnf install libpcap-devel epel-release epel-next-release -y
        sudo yum -y install gcc automake autoconf libtool make glibc-devel-2.28-164.el8.i686 dpkg-devel dpkg-dev
	git clone --depth 1 --branch v6.7.0 --recurse-submodules https://github.com/libbpf/bpftool.git
        cd bpftool/src
        make && sudo make install
	sudo cp /usr/local/sbin/bpftool /usr/sbin/
        cd
        git clone --depth 1 --branch v1.3.1 --recurse-submodules https://github.com/xdp-project/xdp-tools.git
        cd xdp-tools
        ./configure
        make
        cd xdp-loader
        sudo cp ./xdp-loader /usr/sbin/
        cd ../lib/libbpf/src
        mkdir build
        DESTDIR=build make install
        cd ../../libxdp
        mkdir build
        DESTDIR=build make install
    SHELL
  end

end
